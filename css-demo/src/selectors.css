h1 {
  color: blue;
}

article {
  background-color: lightgray;
}

article p:first-of-type {
  color: red;
  font-size: 1.5em;
}

/* A universal selector‚Äîalso known as a wildcard‚Äîmatches any element. */
* {
  color: hotpink;
}

/* A type selector matches a HTML element directly. */
section {
  border: 2px solid black;
  padding: 2em;
}

.my-class {
  background-color: lightblue;
}

.my-other-class {
  border: 3px solid green;
}

hr {
  border: 2px solid black;
  margin: 2em 0;
}

/* ID selectors are unique to a single element. */
/* They are defined with a # symbol. */
#my-id {
  background-color: lightgreen;
  padding: 1em;
}

/* Attribute selectors match elements based on their attributes. */
[data-attr='primary'] {
  background-color: red;
}

[data-attr='secondary'] {
  background-color: green;
}

/* You can use case-sensitive attribute selectors by adding an s operator to your attribute selector. */
[data-attr='tertiary' s] {
  background-color: blue;
}

/* ================ HREF Selectors ================ */
L

/* A href that contains "example.com" */
[href*='something.example.com'] {
  background-color: red;
  color: white;
}

/* A href that starts with https */
[href^='https://google'] {
  background-color: green;
}

/* A href that ends with .com */
[href$='.xyz'] {
  color: blue;
  background-color: yellow;
}

/* Grouping selectors */
strong,
em,
.my-grouping-class,
[data-grouping] {
  background-color: lightgray;
}

/* Pseudo-classes and pseudo-elements */
.hover-me:hover {
  outline: 5px solid red;
}

/* Sets all even paragraphs to have a different background */
p:nth-child(even) {
  outline: 2px solid blue;
}

.my-before-example::before {
  content: '‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è';
  color: red;
}

.my-before-example::after {
  content: 'üî•üî•üî•';
  color: red;
}

::selection {
  background-color: green;
  color: black;
}

/* ============== Complex selectors ============== */
/* Combinators */


/* This snippet selects all <strong> elements that are child elements of <p> elements only, making them blue recursively. */
p strong {
  color: red;
}

/* Next sibling combinator */
.next-sibling-demo *+* {
  background-color: lightblue;
  margin-top: 1em;
  outline: 1px solid black;
}

.subsequent-sibling-demo p~* {
  background-color: lightblue;
  margin-top: 1em;
  outline: 1px solid black;
}

/* Compound selectors */
a.my-link {
  background-color: lime;
  padding: 1em;
}
